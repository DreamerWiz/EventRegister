// SPDX-License-Identifier: MIT

// /**
//   ███▄ ▄███▓ █    ██   ██████  █    ██  ▄▄▄▄    ██▓
//   ▓██▒▀█▀ ██▒ ██  ▓██▒▒██    ▒  ██  ▓██▒▓█████▄ ▓██▒
//   ▓██    ▓██░▓██  ▒██░░ ▓██▄   ▓██  ▒██░▒██▒ ▄██▒██▒
//   ▒██    ▒██ ▓▓█  ░██░  ▒   ██▒▓▓█  ░██░▒██░█▀  ░██░
//   ▒██▒   ░██▒▒▒█████▓ ▒██████▒▒▒▒█████▓ ░▓█  ▀█▓░██░
//   ░ ▒░   ░  ░░▒▓▒ ▒ ▒ ▒ ▒▓▒ ▒ ░░▒▓▒ ▒ ▒ ░▒▓███▀▒░▓
//   ░  ░      ░░░▒░ ░ ░ ░ ░▒  ░ ░░░▒░ ░ ░ ▒░▒   ░  ▒ ░
//   ░      ░    ░░░ ░ ░ ░  ░  ░   ░░░ ░ ░  ░    ░  ▒ ░
//         ░      ░           ░     ░      ░       ░
//                                               ░
//  *
//  */

import {Base64} from "./library/Base64.sol";
import {ERC721} from "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import {IAgent} from "./interface/IAgent.sol";
import {IMusubiSVG} from "./interface/IMusubiSVG.sol";

contract MusubiBadge is ERC721 {
    constructor() ERC721("test", "symbol") {}

    address private _agent;

    address private _svgHolder;

    uint private _counter;

    modifier onlyMinter() {
        require(
            IAgent(_agent).isMinter(msg.sender),
            "MusubiToken: Not allowed"
        );
        _;
    }

    /*
    <svg width="450" height="450" viewBox="450 450"  xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink">
	    

    <style type="text/css" >
      <![CDATA[

        polygon {
           stroke: #ffd111 !important;
           fill:   none !important;
        }
		
		path {
		   stroke: #ffd111 !important;
			fill: #ffd111 !important;
		}

      ]]>
    </style>

	
	<defs>
      <clipPath id="clipPath">
		  <polygon points="225 0, 450 112.5, 450 337.5, 225 450, 0 337.5, 0 112.5" ></polygon>
      </clipPath>
	</defs>

	<polygon points="225 5, 440 112.5, 440 337.5, 225 440, 5 337.5, 5 112.5"  stroke-width="10" fill="none" stroke="#ffd111" />
 <g id="canvas" clip-path="url(#clipPath)">
	 
	 <path
       transform="translate(30, 80)"
       d="m 71.280001,262.59116 c -2.289835,-0.55745 -4.342478,-1.79407 -5.745351,-3.46129 -2.540087,-3.01872 -1.213726,-5.10533 9.261425,-14.56987 9.783194,-8.83935 30.333665,-27.65133 38.498885,-35.24204 3.57223,-3.32088 14.36296,-13.27396 23.97939,-22.11796 9.61643,-8.844 22.1377,-20.38376 27.82504,-25.64391 27.44971,-25.3879 40.85156,-37.75876 43.70061,-40.3388 16.28288,-14.74538 19.56251,-18.02512 19.76868,-19.76941 0.30825,-2.608036 -1.06942,-7.821536 -3.93832,-14.903634 -0.72254,-1.783649 -3.85102,-2.337444 -8.15036,-1.442756 -3.72518,0.775208 -7.35443,2.470089 -44.16,20.62302 -41.78269,20.60771 -71.72741,35.31096 -80.399999,39.47747 -3.432,1.64881 -12.072,5.8598 -19.2,9.35776 C 23.762687,178.58479 20.622074,180 16.263311,180 c -3.378178,0 -4.60493,-1.08748 -5.484136,-4.86151 -0.324129,-1.39133 1.072013,-6.42416 2.628429,-9.47499 1.255553,-2.46109 5.058379,-5.73102 9.890895,-8.50487 6.923693,-3.97418 17.699064,-10.10375 20.141502,-11.45749 C 55.61352,138.95387 108.80078,108.50269 149.52,84.967386 c 25.25595,-14.597683 26.79149,-15.48134 31.68,-18.23083 2.64,-1.48484 7.932,-4.655603 11.76,-7.046139 3.828,-2.390536 7.716,-4.727814 8.64,-5.193951 3.17678,-1.602614 10.10686,-5.671592 10.36161,-6.083794 C 212.10189,48.185702 212.76971,48 213.44566,48 c 0.88457,0 2.41296,1.126696 5.45375,4.0204 4.50367,4.285832 8.37033,7.158745 9.31818,6.923376 0.44691,-0.110977 0.42877,-0.965029 -0.0796,-3.743776 -1.06653,-5.830236 -0.94449,-14.413742 0.26958,-18.96 2.95409,-11.062039 10.24176,-18.897752 19.91251,-21.409958 5.64938,-1.467562 14.23349,-0.892008 19.51987,1.308782 11.12124,4.62992 19.23977,11.103523 25.60081,20.413721 2.73932,4.009351 2.46197,4.659399 -2.56081,6.00194 -2.244,0.599801 -5.84336,1.448272 -7.99858,1.885492 l -3.91858,0.794945 -4.24142,-2.420181 c -2.57311,-1.468234 -5.34668,-2.641112 -7.05138,-2.981864 -9.66883,-1.932702 -18.22334,7.509519 -15.44917,17.052347 0.74576,2.565307 1.52055,4.237041 6.10158,13.165054 1.77116,3.451822 3.32328,4.750327 9.67551,8.094522 3.4075,1.793912 4.31757,2.065483 6.93685,2.07 2.26767,0.0039 3.45721,-0.259386 4.8,-1.062448 4.78893,-2.864052 6.29551,-5.905569 6.69723,-13.520576 0.31119,-5.898779 0.26755,-5.81416 6.90655,-13.390726 1.77303,-2.023421 3.46478,-4.129421 3.75944,-4.679999 0.79506,-1.485577 2.63871,-1.278967 3.85721,0.43226 1.4072,1.976226 4.74704,9.24299 5.84925,12.726688 2.22854,7.043616 3.02133,19.98629 1.59483,26.036399 -1.91762,8.133077 -7.77675,15.577702 -15.26785,19.399372 -7.7733,3.96565 -19.87262,3.63874 -29.47165,-0.79629 -1.99926,-0.92372 -3.85317,-1.67948 -4.11981,-1.67948 -0.64947,0 -0.0661,7.98595 0.85901,11.76 0.38829,1.584 0.70841,3.744 0.71138,4.8 0.006,2.09111 0.6267,1.55253 -19.88195,17.24788 -17.77933,13.60658 -28.11501,21.62923 -49.18561,38.17833 -20.46852,16.07622 -37.64862,29.48364 -49.96284,38.99121 -6.204,4.78999 -13.008,10.06647 -15.12,11.72551 -11.46348,9.00491 -38.430048,29.87548 -42.653089,33.01102 -3.677556,2.73053 -9.287873,4.10748 -13.02691,3.19721 z m 7.44,-5.91471 c 4.125427,-1.9288 7.169782,-4.13401 13.722489,-9.94002 1.032631,-0.91496 3.713511,-3.11881 5.957511,-4.89745 5.674839,-4.49798 11.771329,-9.45849 13.589599,-11.05737 2.04489,-1.79817 2.52804,-2.18421 5.86755,-4.68822 1.57457,-1.18063 4.26685,-3.34715 5.98285,-4.81449 1.716,-1.46734 3.93414,-3.26952 4.9292,-4.00484 0.99505,-0.73532 2.32291,-1.8088 2.95079,-2.3855 0.62788,-0.57671 2.94574,-2.49732 5.1508,-4.26802 2.20507,-1.7707 5.68657,-4.5787 7.73667,-6.24 5.06313,-4.1029 6.85543,-5.54736 14.32283,-11.54308 3.53634,-2.8394 7.29371,-5.99617 8.34971,-7.01505 1.056,-1.01888 2.97926,-2.563 4.27392,-3.43137 1.29465,-0.86838 2.70632,-1.93128 3.13704,-2.362 0.43072,-0.43072 1.63946,-1.41995 2.68609,-2.1983 1.04662,-0.77834 3.97988,-3.14667 6.51834,-5.26295 2.53847,-2.11629 5.23847,-4.32745 6,-4.91369 3.93263,-3.02742 5.62813,-4.39777 7.32598,-5.92106 0.45791,-0.41083 2.65642,-2.22698 4.88559,-4.03589 2.22918,-1.80891 5.13304,-4.18959 6.45304,-5.29041 1.32,-1.10082 3.1949,-2.47895 4.16644,-3.06252 0.97154,-0.58357 2.37883,-1.75475 3.12731,-2.60263 0.74848,-0.84787 2.00559,-1.95992 2.79357,-2.47121 1.47899,-0.95967 6.51976,-5.08625 9.19134,-7.52441 0.83526,-0.76229 1.76004,-1.38597 2.05506,-1.38597 0.29503,0 0.65615,-0.31203 0.80249,-0.6934 0.14635,-0.38136 1.48957,-1.61346 2.98494,-2.73798 2.918,-2.19434 9.27841,-7.36271 14.71885,-11.96032 1.848,-1.56171 3.77536,-3.13587 4.28301,-3.49814 0.84095,-0.60011 0.92931,-1.35802 0.99385,-8.52442 0.0605,-6.72022 0.26425,-8.704594 1.39888,-13.625741 1.05354,-4.56942 1.34071,-7.049794 1.38933,-12 0.0606,-6.172326 0.0436,-6.276439 -1.57002,-9.6 -0.89722,-1.848 -1.89537,-3.684 -2.21811,-4.08 -1.54745,-1.898725 -5.04115,-9.790361 -5.92608,-13.385942 -1.1639,-4.729048 -1.22031,-7.257801 -0.2207,-9.894057 0.40042,-1.056 0.927,-2.570991 1.1702,-3.366646 0.63191,-2.067411 4.49058,-5.786889 7.46153,-7.192372 3.58285,-1.694963 8.77878,-1.695372 12.4831,-9.82e-4 1.4429,0.66 2.71756,1.2 2.83257,1.2 0.11501,0 1.24261,0.666228 2.50577,1.480508 2.16718,1.397032 2.48411,1.464062 5.62097,1.188814 1.82836,-0.160432 3.55636,-0.478238 3.84,-0.706237 0.28364,-0.227999 1.42127,-0.56385 2.52807,-0.746337 1.1068,-0.182486 2.28845,-0.66445 2.62588,-1.07103 0.51538,-0.620995 0.40464,-0.905789 -0.69237,-1.780508 -0.71823,-0.5727 -1.30588,-1.273387 -1.30588,-1.557082 0,-0.283696 -1.6505,-1.787582 -3.66777,-3.341969 C 279.91495,27.911771 277.56443,26.046 276.70886,25.32 275.85329,24.594 274.98983,24 274.79006,24 c -0.19977,0 -2.11525,-0.836023 -4.25663,-1.857828 -8.63834,-4.121963 -17.41976,-4.567929 -24.44536,-1.241462 -3.18763,1.50927 -9.00318,6.996692 -10.14023,9.56809 -0.41131,0.93016 -1.07916,2.44127 -1.4841,3.358023 -0.40495,0.916752 -1.16001,3.323631 -1.67792,5.348619 -1.05792,4.136426 -0.97218,9.215703 0.3124,18.508647 0.75309,5.447957 0.55724,6.751246 -1.86278,12.39591 -1.16149,2.709148 -1.70135,4.791839 -2.32571,8.972138 -0.65592,4.391578 -0.29024,6.469135 2.56063,14.547862 2.56285,7.262561 2.83235,8.566421 2.0738,10.033281 -0.60595,1.17178 -4.13375,4.59124 -15.35077,14.87933 -2.13036,1.95394 -5.62226,5.19394 -7.75978,7.2 -6.41147,6.01718 -12.30149,11.33967 -14.59361,13.18742 -1.188,0.95769 -2.3436,1.93536 -2.568,2.17261 -1.61718,1.70977 -2.673,2.74893 -7.11976,7.00736 -2.75674,2.64 -6.93621,6.528 -9.28769,8.64 -2.35148,2.112 -4.81648,4.38 -5.47777,5.04 -0.66128,0.66 -1.67073,1.524 -2.24321,1.92 -0.57248,0.396 -2.41398,2.02308 -4.09222,3.61574 -1.67824,1.59265 -5.4326,5.15665 -8.34302,7.92 -2.91042,2.76334 -7.21883,6.75226 -9.57424,8.86426 -6.12186,5.4892 -11.56076,10.55909 -14.95182,13.93737 -1.61575,1.60966 -5.25696,4.94565 -8.09158,7.41332 -2.83461,2.46767 -6.0707,5.36926 -7.19129,6.44799 -6.7958,6.54189 -9.44784,9.02925 -11.5633,10.84528 -1.30685,1.12187 -4.28187,3.84793 -6.611152,6.0579 -2.329279,2.20998 -4.391767,4.01814 -4.583308,4.01814 -0.19154,0 -1.525766,1.19852 -2.964947,2.66338 -1.43918,1.46487 -6.552322,6.22858 -11.362537,10.58603 -8.994946,8.14829 -10.970835,10.29723 -10.528323,11.45039 0.615658,1.60439 5.073767,1.21531 9.434168,-0.82335 z M 241.2,86.182658 c -0.264,-0.09828 -1.07179,-0.309141 -1.79509,-0.468586 -0.8042,-0.177278 -2.06289,-1.235934 -3.24,-2.725089 -1.55,-1.960892 -1.92439,-2.824122 -1.92223,-4.432087 0.006,-4.601174 1.95365,-7.725876 6.0169,-9.654013 1.58699,-0.753078 2.02441,-0.777495 3.76792,-0.210325 3.66611,1.192596 5.62758,2.606833 6.58667,4.749037 1.21985,2.724616 1.19506,6.23803 -0.0542,7.678404 -0.528,0.608789 -0.96,1.253689 -0.96,1.43311 0,0.179421 -0.82818,0.991765 -1.8404,1.805208 -1.69941,1.365684 -5.18648,2.335501 -6.5596,1.824341 z m 4.08873,-3.442155 c 5.78761,-2.315741 3.52724,-11.220504 -2.84819,-11.220504 -3.14636,0 -5.95421,4.129903 -5.10587,7.509946 0.41731,1.662715 2.83196,3.896501 4.48388,4.148042 0.7158,0.108995 1.35108,0.230537 1.41174,0.270093 0.0607,0.03956 0.98696,-0.278854 2.05844,-0.707577 z M 19.995852,173.76 c 1.71112,-0.792 3.334223,-1.44 3.606896,-1.44 0.272672,0 1.499602,-0.52633 2.72651,-1.16961 1.226908,-0.64329 5.146742,-2.60964 8.710743,-4.36967 6.995654,-3.4547 9.644242,-4.79938 11.52,-5.84864 0.66,-0.3692 1.605036,-0.79821 2.100079,-0.95337 0.495044,-0.15515 1.791044,-0.78943 2.88,-1.4095 1.088957,-0.62008 4.895921,-2.55451 8.459921,-4.29875 13.452837,-6.58389 17.121738,-8.41469 19.92,-9.94016 1.584,-0.86352 3.96,-2.03739 5.28,-2.6086 1.32,-0.5712 4.128,-1.97035 6.24,-3.10921 2.112,-1.13886 4.92,-2.56164 6.24,-3.16174 1.32,-0.6001 4.127999,-2.01389 6.239999,-3.14177 2.112,-1.12787 5.244,-2.7562 6.96,-3.61851 1.716,-0.86231 3.47502,-1.75391 3.90894,-1.98133 0.43391,-0.22742 3.13391,-1.63545 6,-3.12894 2.86608,-1.49349 5.42706,-2.88539 5.69106,-3.0931 0.264,-0.20771 3.72,-2.05359 7.68,-4.10195 3.96,-2.04835 9.9,-5.13023 13.2,-6.8486 3.3,-1.71838 6.648,-3.43148 7.44,-3.80689 0.792,-0.37541 2.196,-1.09425 3.12,-1.59744 0.924,-0.50318 5.568,-2.87466 10.32,-5.269946 7.22118,-3.639896 23.28738,-11.83116 35.52,-18.109673 4.97052,-2.551168 6.39849,-2.992602 9.6806,-2.992602 3.6997,0 6.4597,0.705685 8.78164,2.24532 0.91424,0.60621 1.80787,0.943007 1.98586,0.74844 0.178,-0.194568 0.69504,-1.86576 1.149,-3.71376 0.45395,-1.848 1.09495,-3.9 1.42444,-4.56 0.32949,-0.66 0.86572,-2.592793 1.19163,-4.295096 0.65971,-3.445836 0.89621,-3.00866 -2.92971,-5.415688 -1.1459,-0.720931 -2.51453,-1.584931 -3.0414,-1.92 -1.15168,-0.73243 -5.26391,-4.03129 -6.87334,-5.513855 -2.40188,-2.21254 -2.07395,-2.309575 -11.84872,3.506025 -3.168,1.884834 -5.97603,3.510591 -6.24006,3.612793 -0.67487,0.261224 -7.20631,4.1248 -10.07994,5.962638 -1.32,0.84421 -3.76718,2.209312 -5.43818,3.033562 -1.67101,0.824249 -3.61501,1.908628 -4.32,2.409731 -1.1067,0.786624 -5.74824,3.434461 -16.35416,9.329474 -1.42578,0.792485 -3.68886,2.163027 -5.02905,3.045649 -1.34019,0.882622 -2.61872,1.604767 -2.84118,1.604767 -0.22245,0 -1.34503,0.647133 -2.49463,1.438073 -1.14959,0.79094 -2.64963,1.65078 -3.33341,1.910755 -1.18082,0.448946 -1.79469,0.821408 -5.40995,3.282452 -0.84731,0.576796 -1.77228,1.04872 -2.05549,1.04872 -0.2832,0 -1.96595,0.949572 -3.73943,2.110159 -1.77349,1.160587 -4.95252,3.069032 -7.06452,4.240982 -2.112,1.17196 -4.596,2.57066 -5.52,3.10823 -0.924,0.53757 -3.624,2.08686 -6,3.44286 -2.376,1.356 -4.644,2.68245 -5.04,2.94767 -0.396,0.26521 -1.584,0.90876 -2.64,1.4301 -1.056,0.52134 -2.244,1.16171 -2.64,1.42304 -1.5449,1.01951 -9.770883,5.85151 -12.08668,7.0998 -5.70827,3.07694 -11.083278,6.19435 -17.027636,9.87573 -2.416874,1.49679 -4.505027,2.72143 -4.640338,2.72143 -0.135312,0 -1.82987,0.93626 -3.765683,2.08057 -1.935814,1.14431 -5.355662,3.05014 -7.599662,4.23518 -2.244,1.18503 -5.052,2.77436 -6.24,3.53182 -1.188,0.75747 -3.024,1.84154 -4.08,2.40905 -1.056,0.56751 -3.324,1.81519 -5.04,2.77263 -1.716,0.95744 -4.308,2.39951 -5.76,3.20458 -1.452,0.80508 -3.72,2.10252 -5.04,2.88319 -2.38122,1.4083 -4.328292,2.4872 -7.310458,4.05082 -0.852751,0.44712 -1.677407,1.01836 -1.832567,1.26941 -0.155161,0.25106 -1.080981,0.86402 -2.057379,1.36214 -2.262108,1.15404 -8.076869,6.4936 -8.985969,8.25161 -0.714676,1.38203 -0.940009,4.34262 -0.373628,4.909 0.584058,0.58406 1.654142,0.33415 4.795852,-1.12 z M 287.2455,100.25896 c 7.24289,-2.41962 14.01828,-9.184362 15.32302,-15.298961 0.14083,-0.66 0.58916,-2.496 0.99627,-4.08 0.45762,-1.780492 0.74308,-5.025318 0.74772,-8.49935 0.007,-4.871836 -0.2175,-6.500061 -1.68389,-12.239999 -2.23384,-8.743996 -2.05816,-8.30065 -3.28922,-8.30065 -1.35495,0 -1.91337,0.472147 -5.10935,4.32 -1.42529,1.715999 -2.97812,3.506414 -3.45074,3.978698 -1.00751,1.006797 -1.02147,1.207736 -0.34012,4.89352 0.3867,2.091871 0.37018,3.614781 -0.0647,5.968156 -0.91375,4.944348 -2.35445,7.234821 -6.75413,10.737896 -2.29259,1.825382 -2.56787,1.914651 -6.56661,2.129422 -3.8236,0.205365 -4.50297,0.09712 -8.09872,-1.290417 -2.15876,-0.833023 -4.18321,-1.825692 -4.49878,-2.205931 -0.31557,-0.38024 -1.18076,-0.691345 -1.92264,-0.691345 -1.51358,0 -1.97666,0.858844 -1.85212,3.435009 0.0427,0.882745 -0.20508,3.116991 -0.55055,4.964991 -0.34548,1.848 -0.64226,4.329234 -0.65952,5.513853 -0.0306,2.100201 0.0284,2.186498 2.36861,3.464443 2.39311,1.306825 4.19703,1.942374 10.56,3.720435 4.16025,1.16253 10.47109,0.94158 14.8455,-0.51977 z"
       id="path1" />
	 
	</g>
</svg>
     */
    function tokenURI(
        uint256 tokenId
    ) public view override(ERC721) returns (string memory) {
        require(
            _exists(tokenId),
            "ERC721Metadata: URI query for nonexistent token"
        );
        string memory json = Base64.encode(
            bytes(
                string(
                    abi.encodePacked(
                        '{"name": "MUSUBI NFT #',
                        uint2str(tokenId),
                        '",',
                        '"image_data": "',
                        IMusubiSVG(_svgHolder).getSVG(tokenId),
                        '"',
                        "}"
                    )
                )
            )
        );
        return string(abi.encodePacked("data:application/json;base64,", json));
    }

    function mint(address user, bytes calldata data) external onlyMinter {
        _mint(user, ++_counter);
    }

    function uint2str(
        uint256 _i
    ) internal pure returns (string memory _uintAsString) {
        if (_i == 0) {
            return "0";
        }
        uint256 j = _i;
        uint256 len;
        while (j != 0) {
            len++;
            j /= 10;
        }
        bytes memory bstr = new bytes(len);
        uint256 k = len;
        while (_i != 0) {
            k = k - 1;
            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));
            bytes1 b1 = bytes1(temp);
            bstr[k] = b1;
            _i /= 10;
        }
        return string(bstr);
    }
}
